{"version":3,"sources":["app/scripts.babel/blacklist.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;;;IAEP,SAAS;AACF,WADP,SAAS,GACC;0BADV,SAAS;;AAEX,QAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;AACpD,QAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;;;AAG9C,QAAI,CAAC,cAAc,EAAE,CAAC;AACtB,QAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC3B,WAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;GAC5C;;eATG,SAAS;;WAWC,0BAAG;AACf,aAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACrC,YAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAC,EAAE,UAAS,IAAI,EAAE;AACpE,eAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,cAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAC,EAAE,UAAS,QAAQ,EAAE;AAChG,iBAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAC9B,CAAC,CAAC;OACJ,CAAC,CAAC;;AAEH,YAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAC,EAAE,UAAS,QAAQ,EAAE;AACvF,eAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;OAC9B,CAAC,CAAC;KACJ;;;WAEiB,8BAAG;AACnB,UAAI,GAAG,GAAG,EAAE,CAAC;;AAEb,UAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE;AAC3C,WAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;OAClB,CAAC,CAAC;;AAEH,aAAO,GAAG,CAAC;KACZ;;;WAEmB,gCAAG;AACrB,UAAI,KAAK,GAAG,YAAY,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;;AAExD,aAAO,KAAK,CAAC;KACd;;;WAsBiB,8BAAG;AACnB,kBAAY,CAAC,uBAAuB,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;KAC/D;;;WAtBmB,uBAAC,IAAI,EAAE;AACzB,UAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,EAAE;AAC1C,oBAAY,CAAC,uBAAuB,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;OAC/D;;AAED,UAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AAC/C,UAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;;;WAEmB,uBAAC,IAAI,EAAE;AACzB,UAAI,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAChC,UAAI,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAS,IAAI,EAAE;AACzD,eAAO,IAAI,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC;OACtC,CAAC,CAAC;;AAEH,aAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACjC,UAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;AACjC,UAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;;;SA3DG,SAAS;;;qBAmEA,SAAS","file":"app/scripts.babel/blacklist.js","sourcesContent":["\n'use strict';\n\nclass Blacklist {\n  constructor() {\n    this.blacklistedWords = this.loadWordsFromStorage();\n    this.blacklistMap = this.createBlacklistMap();\n\n    // Broadcast to main extension.\n    this.broadcastWords();\n    this.blacklistWord('test'); \n    console.log('Successfully created popup!');\n  }\n\n  broadcastWords() {\n    console.log('Broadcasting to tabs.');\n    chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {\n      console.log(tabs);\n      chrome.tabs.sendMessage(tabs[0].id, {blacklistedWords: this.blacklistedWords}, function(response) {\n        console.log(response.status);\n      });\n    });\n    \n    chrome.runtime.sendMessage({blacklistedWords: this.blacklistedWords}, function(response) {\n      console.log(response.status);\n    });\n  }\n\n  createBlacklistMap() {\n    var map = {};\n\n    this.blacklistedWords.forEach(function(word) {\n      map[word] = true;\n    }); \n\n    return map;\n  }\n\n  loadWordsFromStorage() {\n    var words = localStorage['twittermute.blacklist'] || [];\n\n    return words; \n  }\n\n  static blacklistWord(word) {\n    if (!localStorage['twittermute.blacklist']) {\n      localStorage['twittermute.blacklist'] = this.blacklistedWords; // if undefined, set to our currently blacklisted words.\n    }\n\n    this.blacklistedWords.push(word.toLowerCase());\n    this.updateLocalStorage();\n  }\n\n  static whitelistWord(word) {\n    var lcWord = word.toLowerCase();\n    var newArray = this.blacklistedWords.filter(function(item) {\n      return item.toLowerCase() !== lcWord; \n    });\n\n    delete this.blacklistMap[lcWord]; // Remove key from the Map.\n    this.blacklistedWords = newArray;\n    this.updateLocalStorage();\n  }\n\n  updateLocalStorage() {\n    localStorage['twittermute.blacklist'] = this.blacklistedWords;\n  }\n}\n\n\nexport default Blacklist;\n\n//export default Popup;\n"]}
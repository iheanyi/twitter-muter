{"version":3,"sources":["../scripts.babel/popup.js"],"names":[],"mappings":"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","file":"popup.js","sourcesContent":["//'use strict';\n\n//import Blacklist from './blacklist';\n\n(function() {\n  let blacklistedWords = [];\n  let blacklistedMap = {};\n\n  function initialize() {\n    console.log('Initialized!');\n    blacklistedWords = loadWordsFromStorage();\n    blacklistedMap = {}; // createBlackListMap();\n    let tabs = [];\n    updateBlackListMap();\n    // Broadcast to main extension.\n    broadcastWords();\n\n    blacklistWord('test');\n    blacklistWord('curvin');\n    blacklistWord('dog');\n\n    chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n      if(request.command === 'update') {\n        sendResponse({blackListedWords: blacklistedWords});\n      }\n    });\n\n    broadcastWords();\n  }\n\n  function broadcastWords() {\n    console.log('Broadcasting to tabs.');\n    chrome.tabs.query({active: true, currentWindow: true, url:'*://twitter.com/*'}, (tabs) => {\n      tabs.forEach((tab) => {\n\n        chrome.tabs.sendMessage(tab.id, {blacklistedWords: blacklistedWords}, function(response) {\n          console.log('In the Chrome broadcast.');\n          console.log(response);\n          if(response && response.status) {\n            console.log('Status response received');\n            console.log(response.status);\n            console.log(response);\n          } \n        });\n      });\n    });\n  }\n\n\n  function updateBlackListMap() {\n    blacklistedMap = createBlackListMap();\n  }\n\n  function createBlackListMap() {\n    var map = {};\n    console.log(blacklistedWords);\n    blacklistedWords.forEach(function(word) {\n      map[word] = true;\n    }); \n\n    return map;\n  }\n\n  function loadWordsFromStorage() {\n    var words = localStorage['twittermute.blacklist'] || [];\n    if(!(words instanceof Array)) {\n      console.log(words);\n      console.log(typeof words);\n      console.log(words instanceof Array);\n      words = words.split(',');\n\n    }\n    console.log(words);\n    return words;\n  }\n\n  function blacklistWord(word) {\n    if (!localStorage['twittermute.blacklist']) {\n      localStorage['twittermute.blacklist'] = blacklistedWords; // if undefined, set to our currently blacklisted words.\n    }\n\n    let lcWord = word.toLowerCase();\n    if(!blacklistedMap[lcWord]) {\n      blacklistedWords.push(word.toLowerCase());\n    }\n\n    updateLocalStorage();\n  }\n\n  function whitelistWord(word) {\n    var lcWord = word.toLowerCase();\n    var newArray = blacklistedWords.filter(function(item) {\n      return item.toLowerCase() !== lcWord; \n    });\n\n    delete blacklistedMap[lcWord]; // Remove key from the Map.\n    blacklistedWords = newArray;\n    updateLocalStorage();\n  }\n\n  function updateLocalStorage() {\n    localStorage['twittermute.blacklist'] = blacklistedWords;\n  }\n\n  initialize();\n})();\n\n\n//export default Popup;\n"]}